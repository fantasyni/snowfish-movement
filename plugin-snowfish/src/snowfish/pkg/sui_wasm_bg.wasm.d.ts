/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_movecodehelper_free(a: number, b: number): void;
export function movecodehelper_new(): number;
export function movecodehelper_register_module(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function movecodehelper_build_bytecode_model(a: number, b: number): void;
export function movecodehelper_get_package_info(a: number, b: number): void;
export function movecodehelper_get_modules(a: number, b: number): void;
export function movecodehelper_get_functions(a: number, b: number, c: number, d: number): void;
export function movecodehelper_get_structs(a: number, b: number, c: number, d: number): void;
export function movecodehelper_get_dependencies(a: number, b: number, c: number, d: number): void;
export function movecodehelper_get_friends(a: number, b: number, c: number, d: number): void;
export function movecodehelper_get_named_constants(a: number, b: number, c: number, d: number): void;
export function movecodehelper_get_objects(a: number, b: number, c: number, d: number): void;
export function movecodehelper_get_shared_objects(a: number, b: number, c: number, d: number, e: number): void;
export function movecodehelper_get_transferred_objects(a: number, b: number, c: number, d: number, e: number): void;
export function movecodehelper_get_frozen_objects(a: number, b: number, c: number, d: number, e: number): void;
export function movecodehelper_get_events(a: number, b: number, c: number, d: number, e: number): void;
export function movecodehelper_disassemble(a: number, b: number, c: number, d: number): void;
export function movecodehelper_disassemble_function(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function movecodehelper_disassemble_function_body(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function movecodehelper_disassemble_struct(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function movecodehelper_move_disassemble(a: number, b: number, c: number, d: number): void;
export function movecodehelper_get_otw_structs(a: number, b: number, c: number, d: number): void;
export function movecodehelper_get_tx_context_functions(a: number, b: number, c: number, d: number): void;
export function movecodehelper_get_entry_functions(a: number, b: number, c: number, d: number): void;
export function movecodehelper_get_private_functions(a: number, b: number, c: number, d: number): void;
export function movecodehelper_get_friend_functions(a: number, b: number, c: number, d: number): void;
export function movecodehelper_get_public_functions(a: number, b: number, c: number, d: number): void;
export function movecodehelper_get_phantom_structs(a: number, b: number, c: number, d: number): void;
export function movecodehelper_unused_private_functions(a: number, b: number, c: number, d: number): void;
export function movecodehelper_unused_constant(a: number, b: number, c: number, d: number): void;
export function movecodehelper_unchecked_return(a: number, b: number, c: number, d: number): void;
export function __wbg_suiwasm_free(a: number, b: number): void;
export function suiwasm_new_bytes(a: number, b: number, c: number, d: number, e: number): number;
export function suiwasm_new_wasm(): number;
export function suiwasm_refresh_vm(a: number, b: number): void;
export function suiwasm_publish_module(a: number, b: number, c: number, d: number): void;
export function suiwasm_setup_storage(a: number, b: number): void;
export function suiwasm_to_json(a: number, b: number, c: number, d: number): void;
export function suiwasm_call_return_bcs(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number): void;
export function callargument_new_bytes(a: number, b: number, c: number, d: number): number;
export function __wbg_movegen_free(a: number, b: number): void;
export function movegen_new(): number;
export function movegen_register_module(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function movegen_build_bytecode_model(a: number, b: number): void;
export function movegen_run_move_gen(a: number, b: number, c: number, d: number): void;
export function movegen_run_move_tx_gen(a: number, b: number, c: number, d: number): void;
export function movegen_run_module_gen(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): void;
export function rustsecp256k1_v0_8_1_context_create(a: number): number;
export function rustsecp256k1_v0_8_1_context_destroy(a: number): void;
export function rustsecp256k1_v0_8_1_default_illegal_callback_fn(a: number, b: number): void;
export function rustsecp256k1_v0_8_1_default_error_callback_fn(a: number, b: number): void;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
