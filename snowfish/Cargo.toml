[package]
name = "snowfish"
version = "0.1.0"
authors = ["justin <fantasyni@163.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
hex = "0.4.3"

move-binary-format = { path = "../../third_party/move/move-binary-format" }
move-core-types = { path = "../../third_party/move/move-core/types" }
move-stdlib = { path = "../../third_party/move/move-stdlib", features = ["testing"] }
move-vm-test-utils = { path = "../../third_party/move/move-vm/test-utils" }
move-vm-runtime = { path = "../../third_party/move/move-vm/runtime" }
move-bytecode-utils = { path = "../../third_party/move/tools/move-bytecode-utils" }
move-vm-types = { path = "../../third_party/move/move-vm/types" }
move-model = { path = "../../third_party/move/move-model" }
move-symbol-pool = { path = "../../third_party/move/move-symbol-pool" }
move-unit-test = {path = "../../third_party/move/tools/move-unit-test"}

move-bytecode-source-map = {path = "../../third_party/move/move-ir-compiler/move-bytecode-source-map"}
move-command-line-common = {path = "../../third_party/move/move-command-line-common"}
move-ir-types = {path = "../../third_party/move/move-ir/types"}
move-coverage = {path = "../../third_party/move/tools/move-coverage"}
move-disassembler = {path = "../../third_party/move/tools/move-disassembler"}
move-compiler = {path= "../../third_party/move/move-compiler"}
aptos-framework = {path = "../framework"}
aptos-table-natives = {path = "../framework/table-natives"}
aptos-aggregator = {path = "../aptos-aggregator"}
aptos-vm = {path = "../aptos-vm"}
aptos-gas-schedule = {path = "../aptos-gas-schedule"}
aptos-types = {path = "../../types"}

bcs = { workspace = true }
bytes = { workspace = true }

prometheus = "0.13.3"
serde = { version = "1.0.124", default-features = false }
serde_json = "1.0.64"
serde-wasm-bindgen = "0.5.0"
wasm-bindgen = "0.2.62"
tsify-next = "0.5.4"
genco = "^0.17.8"
convert_case = "^0.6.0"
colored = "2.0.0"
getrandom = { workspace = true, features = ["js"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }
anyhow = "1.0.92"
web-sys = { version = "0.3.72", features = ["console"]}
once_cell = "1.19.0"
clap = { version = "4.5.13", features = ["derive"] }

[dev-dependencies]
#wasm-bindgen-test = "0.3.34"

#[profile.release]
# Tell `rustc` to optimize for small code size.
#opt-level = "z"
[profile.release]
debug = true